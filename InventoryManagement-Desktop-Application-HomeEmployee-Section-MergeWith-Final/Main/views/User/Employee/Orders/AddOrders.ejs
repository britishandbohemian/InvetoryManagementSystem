<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <!-- Font Awesome -->

    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />

    <link rel="stylesheet" href="/css/styles.css">

    <title>
        Point Of Sale
    </title>




</head>

<body>


    <%- include('../NavbarEmployee') %>




        <!-- Main content section -->
        <div class="main-content" style="display: grid;grid-template-columns: 1fr 1fr;padding: 0;">
            <!-- Main -->
            <div style="padding-left: 1rem;margin-top: 2rem;">


                <!-- Search bar -->
                <div style="position: relative; width: 20vw; margin-left: 2rem;">
                    <input id="searchInput" class="shadowNav" style="text-align: center;
                                                  font-size: 0.8em;
                                                  width: 100%;
                                                  height: 2.3rem;
                                                  background-color: #ececec;
                                                  border: 1px #cfcfcf solid;
                                                  border-radius: 24px;
                                                  padding-left: 2.5rem;" type="text" placeholder="Search Inventory">
                    <i style="position: absolute; 
                                              left: 1rem; 
                                              top: 0.5rem; 
                                              font-size: 0.8em;
                                              color: rgb(158, 158, 158);" class="search-icon"><span
                            style="font-size: 1.5em;" class="material-symbols-outlined">
                            search
                        </span></i>
                </div>

                <!-- Cards -->
                <div class="container" style="padding: 2rem;">
                    <div class="row" style="display: flex;gap: 3rem;">
                        <% products.forEach(function(product){ %>
                            <div class="col-md-3" id="productCard_<%=product.productId%>">
                                <div class="card" style="border-radius: 0px;width: 200px;margin-top: 0.8rem;">
                                    <img src="/images/food.jpg" class="card-img-top"
                                        style="border-radius: 0px; background-color: rgb(0, 0, 0);  height: 200px; min-height: 0.8rem;"
                                        alt="">
                                    <div class="card-body">
                                        <h5 class="card-title product-name" id="productName_<%=product.productId%>"
                                            style="font-size: 0.7rem; margin-bottom: 13px; margin-top: 5px;">
                                            <%= product.productName %>
                                        </h5>
                                        <h5 class="card-title product-price" id="productPrice_<%=product.productId%>"
                                            style="font-size: 0.7rem; margin-bottom: 13px; margin-top: 5px;">
                                            R <%= product.productSellingPrice %>
                                        </h5>
                                        <button onclick='addToCart("<%=product.productId%>")'
                                            style="font-size: 12px; display: flex;justify-content: center;gap: 10px;"
                                            class="btn">
                                            Add To Cart <span style="padding-left: 10px;font-size: 20px;"
                                                class="material-symbols-outlined">shopping_cart</span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <% }); %>
                    </div>
                </div>
            </div>

            <!-- Side Bar  -->
            <div
                style="padding: 2rem 1rem;width: 20vw; background-color: #F4F4F4; position: fixed;float: right;right: 0;height: 100%;">

                <h1 style="font-size: 1.5vw;font-weight: bold;">Order number <Span
                        style="font-size: 1.5vw;font-weight: black;">#</Span></h1>
                <h2 style="font-size: 1.5rem; font-weight: bold;margin-bottom: 1rem;">Items</h2>

                <!-- Div Items -->
                <div id="Items" style="margin-top: 1rem;height: 70%;overflow: auto;">


                    <!-- Cards of items -->
                    <div id="Items" style="display: flex;gap:1rem;">



                    </div>
                </div>


                <!-- total -->
                <div
                    style="border: 1px solid #DBDBDB; margin-top: 0.6rem;padding-top: 1rem;background-color: white;position: absolute;left: 0;width: 100%;bottom: 0;">

                    <div style="padding-left: 0.5rem;">
                        <!-- Subtotal -->
                        <div style="display: grid;grid-template-columns: 50% auto;">
                            <h3 style="font-size: 1vw;">Sub-Total</h3>
                            <h3 id="subtotal" style="font-weight:bold;font-size: 1vw;">R0.00</h3>
                        </div>
                        <!-- Tax -->
                        <div style="display: grid;grid-template-columns: 50% auto;">
                            <h3 style="font-size: 1vw;">Tax @ 17%</h3>
                            <h3 id="vat" style="font-weight:bold;font-size: 1vw;">R0.00</h3>
                        </div>

                        <div style="display: grid;grid-template-columns: 50% auto;">
                            <h3 style="font-size: 1vw;">Total</h3>
                            <h3 id="total" style="font-weight:bold;font-size: 1vw;">R0.00</h3>
                        </div>
                    </div>

                    <!-- Button Procced with payment -->

                    <div style="display: flex;padding: 0.3rem;background-color: black;width: 100%;">
                        <a href="/OrdersEmp" style="width: 100%;border: none;background-color: black;color: white;"> Place Order
                        </a>

                        <a onclick="MakeSale()"
                            style="display: flex;align-items: center;border: none;text-decoration: none;color: white;">
                            <span class="material-symbols-outlined">
                                arrow_forward
                            </span>

                        </a>

                    </div>
                </div>

            </div>
        </div>





        <script>

            document.addEventListener("DOMContentLoaded", function () {
                const searchInput = document.getElementById("searchInput");

                searchInput.addEventListener("input", function (event) {
                    const query = event.target.value.toLowerCase();
                    const productCards = document.querySelectorAll(".col-md-3");

                    productCards.forEach(function (card) {
                        const productName = card.querySelector(".product-name");
                        const productPrice = card.querySelector(".product-price");

                        const nameText = productName.textContent.toLowerCase();
                        const priceText = productPrice.textContent.toUpperCase();

                        if (nameText.includes(query) || priceText.includes(query)) {
                            card.style.display = "block";
                            productName.innerHTML = highlightText(nameText, query);
                            productPrice.innerHTML = highlightText(priceText, query);
                        } else {
                            card.style.display = "none";
                        }
                    });
                });

                function highlightText(text, query) {
                    const highlighted = text.replace(new RegExp(`(${query})`, "gi"), "<span style='background-color: yellow;'>$1</span>");
                    return highlighted;
                }
            });
            function MakeSale() {
                var productsToSell = prepareCartForServer();
                fetch('/api/Sales', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ products: productsToSell }) // Send the products as JSON
                })
                    .then(response => response.json())
                    .then(data => {
                        // Handle the response
                    })
                    .catch(error => {
                        console.error('An error occurred:', error); // Handle any errors
                    });

            }



            function prepareCartForServer() {
                var cart = getCart(); // Get the cart from local storage
                let uniqueCart = [...new Set(cart)]; // Get unique product IDs
                var productsForServer = []; // Initialize an array to hold products

                uniqueCart.forEach(element => {
                    let quantity = cart.filter(item => item === element).length; // Count the quantity of each product in the cart
                    productsForServer.push({ id: element, quantity: quantity }); // Push an object for each product into the array
                });

                return productsForServer; // Return the array of product objects
            }


            console.log(prepareCartForServer());


            // Clear localStorage on page load
            window.onload = function () {
                localStorage.clear();
            };


            // Define your function to be executed after the page loads
            function myFunction() {
                getCart();

                LoadCart();
                // Your code here...
                console.log("Page has finished loading!");
            }

            // Attach the function to the DOMContentLoaded event
            document.addEventListener('DOMContentLoaded', myFunction);


            // Declaring and initializing function LoadCart
            function LoadCart() {
                // Converting server-side products to a JSON object
                let allproducts = JSON.parse('<%-JSON.stringify(products)%>');

                // Getting the cart from localStorage
                var cart = getCart();

                var subtotal = 0;
                var vat = 0.17; // VAT rate
                var html = ``; // HTML string to be filled
                var counter = 0; // Counter set to 0 to iterate over the allproducts array

                // Convert cart array to a Set to remove duplicates
                let uniqueCart = [...new Set(cart)];

                // Looping through each unique item in the cart
                uniqueCart.forEach(element => {

                    // Count the quantity of each product in the cart
                    let quantity = cart.filter(item => item === element).length;

                    // Appending product details to HTML string
                    html += `<div style="display:grid;grid-template-columns: 60% 1fr ;align-items: center;border: 1px solid #DBDBDB;padding: 0px;background-color: white; margin-bottom:0.4rem;">
            <div>
                <h3 style="font-size: 0.9rem;padding-left: 0.8rem;font-weight: 600;padding-top:1rem">${allproducts[counter].productName}</h3>
                <h4 style="padding-left: 0.8rem;font-weight: 600;">R${allproducts[counter].productSellingPrice}</h4>
                <h3 style="padding-left: 0.8rem;font-weight: 600;font-size:1rem">Quantity: ${quantity}</h3 >
            </div >
                        <div style="height:100%">
                            <div style="display: flex;justify-content: center;height:100%">
                                <button id="${element}" onclick="removeFromCart(this.id)" style="border: none;background-color: #f15e47;color: white;width: 100%;">
                                    <span class="material-symbols-outlined">delete</span>
                                </button>
                            </div>
                        </div>
        </div >`;
                    // Updating subtotal with current product's price
                    subtotal += allproducts[counter].productSellingPrice * quantity;
                    counter++;
                });

                // Calculate VAT and total
                vat = subtotal * vat / 100;
                vat = roundToDecimal(vat, 2); // Round VAT to 2 decimal places
                var total = subtotal + vat;

                // Updating HTML with cart's details
                document.getElementById("subtotal").innerHTML = "R" + subtotal;
                document.getElementById("vat").innerHTML = "R" + vat;
                document.getElementById("total").innerHTML = "R" + total;
                document.getElementById("Items").innerHTML = html;
            }



            // Function to round a number to given decimal places
            function roundToDecimal(number, decimalPlaces) {
                const factor = 10 ** decimalPlaces;
                return Math.round(number * factor) / factor;
            }

            // Clear localStorage on page load
            window.onload = function () {
                localStorage.clear();
            };

            // Initialize cart from localStorage or an empty array if no cart data exists in localStorage
            let cart = JSON.parse(localStorage.getItem('cart')) || [];
            // Function to add a product to the cart
            function addToCart(productId) {
                cart.push(productId);
                localStorage.setItem('cart', JSON.stringify(cart)); // Update cart in localStorage
                LoadCart(); // Reload cart
            }

            // Function to remove a product from the cart
            function removeFromCart(productId) {
                const index = cart.indexOf(productId);
                if (index !== -1) {
                    cart.splice(index, 1);
                    localStorage.setItem('cart', JSON.stringify(cart)); // Update cart in localStorage
                }
                LoadCart();
                logCart(); // Log updated cart
            }

            // Function to get the cart from localStorage
            function getCart() {
                return JSON.parse(localStorage.getItem('cart'));
            }

            // Function to log the current state of the cart
            function logCart() {
                console.log('Current cart:', cart);
            }

            logCart();

        </script>

</body>

</html>